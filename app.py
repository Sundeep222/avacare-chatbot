import streamlit as st
import pandas as pd

# Load data
doctors = pd.read_excel("doctors.xlsx")
patients = pd.read_excel("patients.xlsx")

# Translation dictionary
translations = {
    "English": {
        "greet": "How can I help you today?",
        "patient_prompt": "Hi! May I know your Patient ID and Name?",
        "enter_id": "Enter your Patient ID:",
        "enter_name": "Enter your Full Name:",
        "checked_in": "Thanks {}, you're now checked in!",
        "not_found": "Patient not found. Please check your ID or name.",
        "symptom_greet": "Welcome back, {}! Please select your symptoms below:",
        "choose_symptoms": "Choose your symptoms:",
        "recommend": "Thanks! Based on your symptoms, we recommend seeing a **{}**.",
        "proceed_btn": "Proceed to Book Appointment",
        "choose_doctor": "Choose a doctor:",
        "choose_time": "Choose a time slot:",
        "confirm_btn": "Confirm Appointment",
        "confirmation": "тЬЕ **Appointment Confirmed!**",
        "patient": "**Patient:**",
        "doctor": "**Doctor:**",
        "datetime": "**Date & Time:**",
        "location": "**Location:** Dallas",
        "insurance": "**Insurance:**",
        "reminder": "ЁЯУй A reminder will also be sent shortly to your emergency contact: **{}**",
        "bye": "Thank you, **{}**. See you soon! ЁЯШК",
        "ask_reminder": "Would you like to receive a reminder confirmation?",
        "radio_reminder": "Send simulated email reminder?",
        "reminder_success": "ЁЯУи Email reminder simulated successfully!",
        "reminder_bye": "ЁЯСЛ Goodbye! Talk to you soon ЁЯШК",
        "reminder_skip": "ЁЯСЛ Okay! Your appointment is confirmed. Talk to you soon ЁЯШК"
    },
    "Spanish": {
        "greet": "┬┐C├│mo puedo ayudarte hoy?",
        "patient_prompt": "┬бHola! ┬┐Puedo conocer su ID de paciente y nombre?",
        "enter_id": "Ingrese su ID de paciente:",
        "enter_name": "Ingrese su nombre completo:",
        "checked_in": "Gracias {}, ┬бya est├бs registrado!",
        "not_found": "Paciente no encontrado. Por favor verifica tu ID o nombre.",
        "symptom_greet": "┬бBienvenido de nuevo, {}! Por favor seleccione sus s├нntomas a continuaci├│n:",
        "choose_symptoms": "Elija sus s├нntomas:",
        "recommend": "┬бGracias! Seg├║n sus s├нntomas, recomendamos ver a un **{}**.",
        "proceed_btn": "Proceder a reservar cita",
        "choose_doctor": "Elija un m├йdico:",
        "choose_time": "Elija un horario:",
        "confirm_btn": "Confirmar cita",
        "confirmation": "тЬЕ **┬бCita confirmada!**",
        "patient": "**Paciente:**",
        "doctor": "**M├йdico:**",
        "datetime": "**Fecha y hora:**",
        "location": "**Ubicaci├│n:** Dallas",
        "insurance": "**Seguro:**",
        "reminder": "ЁЯУй Se enviar├б un recordatorio pronto a su contacto de emergencia: **{}**",
        "bye": "Gracias, **{}**. ┬бNos vemos pronto! ЁЯШК",
        "ask_reminder": "┬┐Desea recibir una confirmaci├│n de recordatorio?",
        "radio_reminder": "┬┐Enviar recordatorio simulado por correo electr├│nico?",
        "reminder_success": "ЁЯУи ┬бRecordatorio de correo electr├│nico simulado con ├йxito!",
        "reminder_bye": "ЁЯСЛ ┬бAdi├│s! Hablamos pronto ЁЯШК",
        "reminder_skip": "ЁЯСЛ Est├б bien. Su cita est├б confirmada. Hablamos pronto ЁЯШК"
    },
    "Hindi": {
        "greet": "рдореИрдВ рдЖрдкрдХреА рдХреИрд╕реЗ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдБ?",
        "patient_prompt": "рдирдорд╕реНрддреЗ! рдХреГрдкрдпрд╛ рдЕрдкрдирд╛ рд░реЛрдЧреА рдЖрдИрдбреА рдФрд░ рдирд╛рдо рдмрддрд╛рдПрдВ?",
        "enter_id": "рдЕрдкрдирд╛ рд░реЛрдЧреА рдЖрдИрдбреА рджрд░реНрдЬ рдХрд░реЗрдВ:",
        "enter_name": "рдЕрдкрдирд╛ рдкреВрд░рд╛ рдирд╛рдо рджрд░реНрдЬ рдХрд░реЗрдВ:",
        "checked_in": "рдзрдиреНрдпрд╡рд╛рдж {}, рдЖрдк рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдЪреЗрдХ-рдЗрди рд╣реЛ рдЧрдП рд╣реИрдВ!",
        "not_found": "рд░реЛрдЧреА рдирд╣реАрдВ рдорд┐рд▓рд╛ред рдХреГрдкрдпрд╛ ID рдпрд╛ рдирд╛рдо рдЬрд╛рдВрдЪреЗрдВред",
        "symptom_greet": "рд╡рд╛рдкрд╕реА рдкрд░ рд╕реНрд╡рд╛рдЧрдд рд╣реИ, {}! рдХреГрдкрдпрд╛ рдиреАрдЪреЗ рдЕрдкрдиреЗ рд▓рдХреНрд╖рдг рдЪреБрдиреЗрдВ:",
        "choose_symptoms": "рдЕрдкрдиреЗ рд▓рдХреНрд╖рдг рдЪреБрдиреЗрдВ:",
        "recommend": "рдзрдиреНрдпрд╡рд╛рдж! рдЖрдкрдХреЗ рд▓рдХреНрд╖рдгреЛрдВ рдХреЗ рдЖрдзрд╛рд░ рдкрд░ рд╣рдо рд╕рд▓рд╛рд╣ рджреЗрддреЗ рд╣реИрдВ рдХрд┐ рдЖрдк **{}** рд╕реЗ рдорд┐рд▓реЗрдВред",
        "proceed_btn": "рдирд┐рдпреБрдХреНрддрд┐ рдмреБрдХ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдЖрдЧреЗ рдмрдврд╝реЗрдВ",
        "choose_doctor": "рдбреЙрдХреНрдЯрд░ рдЪреБрдиреЗрдВ:",
        "choose_time": "рд╕рдордп рд╕реНрд▓реЙрдЯ рдЪреБрдиреЗрдВ:",
        "confirm_btn": "рдирд┐рдпреБрдХреНрддрд┐ рдХреА рдкреБрд╖реНрдЯрд┐ рдХрд░реЗрдВ",
        "confirmation": "тЬЕ **рдирд┐рдпреБрдХреНрддрд┐ рдХреА рдкреБрд╖реНрдЯрд┐ рд╣реЛ рдЧрдИ!**",
        "patient": "**рд░реЛрдЧреА:**",
        "doctor": "**рдбреЙрдХреНрдЯрд░:**",
        "datetime": "**рддрд╛рд░реАрдЦ рдФрд░ рд╕рдордп:**",
        "location": "**рд╕реНрдерд╛рди:** Dallas",
        "insurance": "**рдмреАрдорд╛:**",
        "reminder": "ЁЯУй рдПрдХ рд░рд┐рдорд╛рдЗрдВрдбрд░ рдЬрд▓реНрдж рд╣реА рдЖрдкрдХреЗ рдЖрдкрд╛рддрдХрд╛рд▓реАрди рд╕рдВрдкрд░реНрдХ рдХреЛ рднреЗрдЬрд╛ рдЬрд╛рдПрдЧрд╛: **{}**",
        "bye": "рдзрдиреНрдпрд╡рд╛рдж, **{}**ред рдЬрд▓реНрдж рдорд┐рд▓рддреЗ рд╣реИрдВ! ЁЯШК",
        "ask_reminder": "рдХреНрдпрд╛ рдЖрдк рдПрдХ рд░рд┐рдорд╛рдЗрдВрдбрд░ рдкреНрд░рд╛рдкреНрдд рдХрд░рдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ?",
        "radio_reminder": "рдХреНрдпрд╛ рдирдХрд▓реА рдИрдореЗрд▓ рд░рд┐рдорд╛рдЗрдВрдбрд░ рднреЗрдЬреЗрдВ?",
        "reminder_success": "ЁЯУи рдирдХрд▓реА рдИрдореЗрд▓ рд░рд┐рдорд╛рдЗрдВрдбрд░ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рднреЗрдЬрд╛ рдЧрдпрд╛!",
        "reminder_bye": "ЁЯСЛ рдЕрд▓рд╡рд┐рджрд╛! рдЬрд▓реНрдж рдмрд╛рдд рдХрд░рддреЗ рд╣реИрдВ ЁЯШК",
        "reminder_skip": "ЁЯСЛ рдареАрдХ рд╣реИ! рдЖрдкрдХреА рдирд┐рдпреБрдХреНрддрд┐ рдХреА рдкреБрд╖реНрдЯрд┐ рд╣реЛ рдЧрдИ рд╣реИред рдЬрд▓реНрдж рдорд┐рд▓рддреЗ рд╣реИрдВ ЁЯШК"
    }
}

# Language selector
language = st.selectbox("Choose your preferred language:", ["English", "Spanish", "Hindi"])
text = translations[language]

# Session state init
if 'step' not in st.session_state:
    st.session_state.step = 0
if 'patient' not in st.session_state:
    st.session_state.patient = None

# Step 0: Chat greeting
prompt = st.text_input(text["greet"])
if prompt.lower() in ["hello", "hi", "hola", "рдирдорд╕реНрддреЗ"] and st.session_state.step == 0:
    st.session_state.step = 1

# Step 1: Get Patient ID and Name
if st.session_state.step == 1:
    st.subheader(text["patient_prompt"])
    patient_id = st.text_input(text["enter_id"])
    full_name = st.text_input(text["enter_name"])
    if patient_id and full_name:
        match = match_patient(patient_id, full_name)
        if match is not None:
            st.session_state.patient = match
            st.success(text["checked_in"].format(full_name))
            st.session_state.step = 2
        else:
            st.error(text["not_found"])

# Step 2: Booking symptoms
if st.session_state.step == 2 and "book" in prompt.lower():
    st.write(text["symptom_greet"].format(st.session_state.patient['First_Name'] + " " + st.session_state.patient['Last_Name']))
    symptoms = st.multiselect(text["choose_symptoms"], ["Headache", "Fever", "Cough", "Stomach pain"])
    if symptoms:
        specialty = "General Physician"
        st.write(text["recommend"].format(specialty))
        if st.button(text["proceed_btn"]):
            st.session_state.step = 3
            st.session_state.specialty = specialty

# Step 3: Choose doctor and time
if st.session_state.step == 3:
    matched_docs = doctors[doctors["Specialty"] == st.session_state.specialty]
    if not matched_docs.empty:
        selected_doctor = st.selectbox(text["choose_doctor"], matched_docs["Doctor_Name"])
        selected_time = st.selectbox(text["choose_time"], ["9 AM - 10 AM", "10 AM - 11 AM", "11 AM - 12 PM"])
        if st.button(text["confirm_btn"]):
            st.session_state.step = 4
            patient = st.session_state.patient
            patient_name = patient['First_Name'] + " " + patient['Last_Name']
            emergency_name = patient['Emergency_Contact_Name']
            appointment_date = "2025-05-06"

            st.markdown(f"""
            {text['confirmation']}  
            {text['patient']} {patient_name}  
            {text['doctor']} {selected_doctor}  
            {text['datetime']} {appointment_date} at {selected_time}  
            {text['location']}  
            {text['insurance']} {patient['Insurance_Type']}  

            {text['reminder'].format(emergency_name)}  

            {text['bye'].format(patient_name)}
            """)

            st.session_state.appointment_confirmed = True

# Step 4: Simulate Email Reminder
if st.session_state.get('appointment_confirmed'):
    st.write(text["ask_reminder"])
    choice = st.radio(text["radio_reminder"], ["Yes", "No"], key="simulate_email")
    if choice == "Yes":
        if st.button("Simulate Email Reminder"):
            st.success(text["reminder_success"])
            st.info(text["reminder_bye"])
    else:
        st.info(text["reminder_skip"])

# Sidebar
st.sidebar.title("Navigation")
st.sidebar.radio("Go to", ["Chatbot", "Doctor Availability", "Patient Data"])
